{"version":3,"sources":["reducers/charasters.reducer.js","reducers/episodes.reducer.js","reducers/characters.info.reducer.js","reducers/episodes.info.reducer.js","reducers/main.reducer.js","requests/requests.js","components/modal/BasicModal.js","helpers/generate.random.id.js","components/basicCard/BasicCard.js","requests/fetcher.js","actions/actions.js","components/tabPanel/TabPanel.js","components/tabs/BasicTabs.js","components/App.js","index.js"],"names":["charactersReducer","state","action","type","characters","episodesReducer","episodes","charactersInfoReducer","charsInfo","episodesInfoReducer","epsInfo","combineReducers","charactersAPI","episodesAPI","style","position","top","left","transform","minWidth","maxWidth","bgcolor","border","boxShadow","p","style1","maxHeight","overflowY","BasicModal","data","open","onClose","useState","listOfEpisodes","setList","useEffect","fetch","episode","map","eps","split","length","join","then","res","json","Array","isArray","Modal","Box","sx","Typography","id","variant","component","name","mb","color","gender","mt","species","status","location","origin","Date","created","toLocaleDateString","result","chars","i","charAt","Math","floor","random","generateRandomID","BasicCard","setOpen","Card","m","width","CardContent","CardMedia","image","alt","CardActions","Button","size","onClick","air_date","fetchAPI","dispatch","url","results","info","connect","ownProps","content","contentType","value","index","React","page","setPage","Object","keys","hidden","display","flexFlow","justifyContent","pb","Pagination","count","pages","onChange","event","newPage","showFirstButton","showLastButton","BasicTabs","setValue","borderBottom","borderColor","Tabs","pt","pl","pr","newValue","Tab","label","className","store","createStore","mainReducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b062274.chunk.js","sourcesContent":["const charactersReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CHARACTERS_LIST':\r\n      return action.characters\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default charactersReducer\r\n","const episodesReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'SET_EPISODES_LIST':\r\n      return action.episodes\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default episodesReducer\r\n","const charactersInfoReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CHARACTERS_INFO':\r\n      return action.charsInfo\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default charactersInfoReducer\r\n","const episodesInfoReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'SET_EPISODES_INFO':\r\n      return action.epsInfo\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default episodesInfoReducer\r\n","import {combineReducers} from 'redux'\r\nimport charactersReducer from \"./charasters.reducer\";\r\nimport episodesReducer from \"./episodes.reducer\";\r\nimport charactersInfoReducer from \"./characters.info.reducer\";\r\nimport episodesInfoReducer from \"./episodes.info.reducer\";\r\n\r\nexport default combineReducers({\r\n  charactersReducer,\r\n  episodesReducer,\r\n  charactersInfoReducer,\r\n  episodesInfoReducer\r\n})\r\n","export let charactersAPI = `https://rickandmortyapi.com/api/character/`;\r\n\r\nexport let episodesAPI = `https://rickandmortyapi.com/api/episode/`;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport {useEffect, useState} from \"react\";\r\nimport {generateRandomID} from \"../../helpers/generate.random.id\";\r\nimport {episodesAPI} from \"../../requests/requests\";\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  minWidth: 300,\r\n  maxWidth: 500,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst style1 = {\r\n  maxHeight: 300,\r\n  overflowY: 'auto'\r\n}\r\n\r\nexport default function BasicModal({data, open, onClose}) {\r\n  let [listOfEpisodes, setList] = useState([])\r\n\r\n  useEffect(()=>{\r\n\r\n    fetch(episodesAPI + data.episode.map(eps => eps.split('/')[eps.split('/').length-1]).join(','))\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          if (Array.isArray(res))\r\n            setList([...res])\r\n          else\r\n            setList([res])\r\n        })\r\n\r\n    return setList([])\r\n  },[data.episode, open])\r\n\r\n  return (\r\n      <div>\r\n        <Modal\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={style}>\r\n            <Typography id=\"modal-modal-title\" variant=\"h3\" component=\"h2\">\r\n              {data.name}\r\n            </Typography>\r\n            <Typography sx={{mb: 1.5}} color=\"text.secondary\">\r\n              Gender: {data.gender}\r\n            </Typography>\r\n            <Typography id=\"modal-modal-description\" sx={{ mt: 2 }} variant=\"body2\">\r\n              Species: {data.species}\r\n              <br/>\r\n              Status: {data.status}\r\n              <br/>\r\n              Location: {data.location.name}\r\n              <br/>\r\n              Type: {data.type || 'None'}\r\n              <br/>\r\n              Origin: {data.origin.name}\r\n              <br/>\r\n              Created: {(new Date(data.created)).toLocaleDateString()}\r\n            </Typography>\r\n            <Box id=\"modal-modal-description\" sx={{ mt: 2, ...style1}} variant=\"body2\">\r\n              Episodes: {listOfEpisodes.length}\r\n              <br/>\r\n              <ul>\r\n              {\r\n                listOfEpisodes.map(eps => <li key={generateRandomID(10)}>[{eps.episode}] {eps.name}</li>)\r\n              }\r\n              </ul>\r\n            </Box>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n  );\r\n}\r\n","export function generateRandomID(length) {\r\n  let result = '',\r\n      chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_';\r\n\r\n  for (let i = 0; i < length; i++)\r\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n\r\n  return result;\r\n}\r\n","import React, {useState} from \"react\";\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {CardMedia} from \"@mui/material\";\r\nimport BasicModal from \"../modal/BasicModal\";\r\n\r\n\r\nexport default function BasicCard({data, type}) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  if (type === 'characters') {\r\n\r\n    return (\r\n        <Card sx={{m: 1.5, width: 300}}>\r\n          <CardContent>\r\n            <CardMedia\r\n                component=\"img\"\r\n                // height=\"194\"\r\n                image={data.image}\r\n                alt={data.name + ' image'}\r\n            />\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              {data.name}\r\n            </Typography>\r\n            <Typography sx={{mb: 1.5}} color=\"text.secondary\">\r\n              Gender: {data.gender}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Species: {data.species}\r\n              <br/>\r\n              Status: {data.status}\r\n              <br/>\r\n              Location: {data.location.name}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" onClick={handleOpen}>Details</Button>\r\n          </CardActions>\r\n          <BasicModal data={data} open={open} onClose={handleClose}/>\r\n        </Card>\r\n    )\r\n  } else\r\n    return (\r\n        <Card sx={{ m:1.5, width: 300 }}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              {data.name}\r\n            </Typography>\r\n            <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n              {data.episode}\r\n              <br/>\r\n              Air date: {data.air_date}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n","import {setCharactersInfo, setCharactersList, setEpisodesInfo, setEpisodesList} from \"../actions/actions\";\r\n\r\n\r\nexport default function fetchAPI(type, dispatch, url){\r\n  fetch(url)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (type === 'characters'){\r\n          dispatch(setCharactersList(res.results))\r\n          dispatch(setCharactersInfo(res.info))\r\n        } else {\r\n          dispatch(setEpisodesList(res.results))\r\n          dispatch(setEpisodesInfo(res.info))\r\n        }\r\n      });\r\n}\r\n","export const setCharactersList = characters => ({\r\n  type: 'SET_CHARACTERS_LIST',\r\n  characters\r\n})\r\nexport const setEpisodesList = episodes => ({\r\n  type: 'SET_EPISODES_LIST',\r\n  episodes\r\n})\r\nexport const setCharactersInfo = charsInfo => ({\r\n  type: 'SET_CHARACTERS_INFO',\r\n  charsInfo\r\n})\r\nexport const setEpisodesInfo = epsInfo => ({\r\n  type: 'SET_EPISODES_INFO',\r\n  epsInfo\r\n})\r\n","import Box from \"@mui/material/Box\";\r\nimport * as React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport BasicCard from \"../basicCard/BasicCard\";\r\nimport {useEffect} from \"react\";\r\nimport {charactersAPI, episodesAPI} from \"../../requests/requests\";\r\nimport fetchAPI from \"../../requests/fetcher\";\r\n\r\nimport Pagination from '@mui/material/Pagination';\r\n\r\n\r\nfunction TabPanel({ value, index, dispatch, content, info, contentType }) {\r\n  useEffect(()=>{\r\n    fetchAPI(contentType, dispatch, (contentType === 'characters')? charactersAPI : episodesAPI)\r\n  },[contentType, dispatch])\r\n\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    fetchAPI(contentType, dispatch, ((contentType === 'characters')? charactersAPI : episodesAPI)+`?page=${newPage}`)\r\n    setPage(newPage);\r\n  };\r\n\r\n  if (!Object.keys(content).length || !Object.keys(info).length)\r\n    return null;\r\n\r\n  return (\r\n      <div hidden={value !== index}>\r\n        <Box sx={{ p: 3, display: \"flex\", flexFlow: 'wrap', justifyContent: 'space-around' }}>\r\n          {\r\n            content.map(res =>\r\n                <BasicCard key={res.id} data={res} type={contentType}/>\r\n            )\r\n          }\r\n        </Box>\r\n        <Box sx={{ p: 5 , pb: 10, display: 'flex', justifyContent: 'end'}}>\r\n          <Pagination page={page}\r\n                      count={info.pages}\r\n                      onChange={handleChangePage}\r\n                      showFirstButton\r\n                      showLastButton/>\r\n        </Box>\r\n      </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  content: (ownProps.contentType === 'characters')?\r\n      state.charactersReducer :\r\n      state.episodesReducer,\r\n  info: (ownProps.contentType === 'characters')?\r\n          state.charactersInfoReducer :\r\n          state.episodesInfoReducer\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatch\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TabPanel)\r\n","import * as React from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport TabPanel from \"../tabPanel/TabPanel\";\r\n\r\n\r\nexport default function BasicTabs() {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n      <Box sx={{ width: '100%' }}>\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <Tabs sx={{ pt: 3, pl: 3, pr: 3 }} value={value} onChange={handleChange}>\r\n            <Tab label=\"Characters\" />\r\n            <Tab label=\"Episodes\" />\r\n          </Tabs>\r\n        </Box>\r\n        <TabPanel value={value} index={0} contentType={'characters'}/>\r\n        <TabPanel value={value} index={1} contentType={'episodes'}/>\r\n      </Box>\r\n  );\r\n}\r\n","import React from \"react\"\r\nimport {connect} from \"react-redux\"\r\n\r\nimport './App.css'\r\nimport BasicTabs from \"./tabs/BasicTabs\"\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BasicTabs />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect()(App);\r\n","import React from 'react'\r\nimport {render} from 'react-dom'\r\nimport {createStore} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport mainReducer from './reducers/main.reducer'\r\nimport './index.css'\r\nimport App from './components/App'\r\n\r\n\r\nconst store = createStore(mainReducer)\r\n\r\nrender(\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}