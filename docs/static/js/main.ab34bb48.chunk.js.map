{"version":3,"sources":["reducers/charasters.reducer.js","reducers/episodes.reducer.js","reducers/characters.info.reducer.js","reducers/episodes.info.reducer.js","reducers/characters.error.reducer.js","reducers/episodes.error.reducer.js","reducers/main.reducer.js","requests/requests.js","actions/actions.js","requests/fetcher.js","helpers/generate.random.id.js","components/modal/BasicModal.js","components/basicCard/BasicCard.js","components/filter/Filter.js","components/tabPanel/TabPanel.js","components/tabs/BasicTabs.js","components/App.js","index.js"],"names":["charactersReducer","state","action","type","characters","episodesReducer","episodes","charactersInfoReducer","charsInfo","episodesInfoReducer","epsInfo","charactersErrorReducer","isErrorOccurred","episodesErrorReducer","combineReducers","episodesAPI","setCharactersError","setEpisodesError","fetchAPI","dispatch","url","fetch","then","res","json","error","results","info","generateRandomID","length","result","chars","i","charAt","Math","floor","random","style","position","top","left","transform","minWidth","maxWidth","bgcolor","border","boxShadow","p","style1","maxHeight","overflowY","BasicModal","data","open","onClose","useState","listOfEpisodes","setList","useEffect","episode","map","eps","split","join","Array","isArray","Modal","Box","sx","Typography","id","variant","component","name","mb","color","gender","mt","species","status","location","origin","Date","created","toLocaleDateString","BasicCard","setOpen","Card","m","width","CardContent","CardMedia","image","alt","CardActions","Button","size","onClick","air_date","Filter","filters","setFilterString","handleChangePage","React","values","setValues","onChange","e","target","value","pt","pl","pr","display","flexDirection","Object","entries","key","val","FormControl","mr","InputLabel","Select","labelId","label","option","MenuItem","TextField","emptyVal","keys","forEach","k","str","connect","ownProps","contentType","content","API","index","page","setPage","filterString","event","newPage","filter","hidden","flexFlow","justifyContent","pb","Pagination","count","pages","showFirstButton","showLastButton","BasicTabs","setValue","borderBottom","borderColor","Tabs","newValue","Tab","App","className","store","createStore","mainReducer","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab34bb48.chunk.js","sourcesContent":["const charactersReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CHARACTERS_LIST':\r\n      return action.characters\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default charactersReducer\r\n","const episodesReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'SET_EPISODES_LIST':\r\n      return action.episodes\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default episodesReducer\r\n","const charactersInfoReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CHARACTERS_INFO':\r\n      return action.charsInfo\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default charactersInfoReducer\r\n","const episodesInfoReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'SET_EPISODES_INFO':\r\n      return action.epsInfo\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default episodesInfoReducer\r\n","const charactersErrorReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CHARACTERS_ERROR':\r\n      return action.isErrorOccurred\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default charactersErrorReducer\r\n","const episodesErrorReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case 'SET_EPISODES_ERROR':\r\n      return action.isErrorOccurred\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default episodesErrorReducer\r\n","import {combineReducers} from 'redux'\r\nimport charactersReducer from \"./charasters.reducer\";\r\nimport episodesReducer from \"./episodes.reducer\";\r\nimport charactersInfoReducer from \"./characters.info.reducer\";\r\nimport episodesInfoReducer from \"./episodes.info.reducer\";\r\nimport charactersErrorReducer from \"./characters.error.reducer\";\r\nimport episodesErrorReducer from \"./episodes.error.reducer\";\r\n\r\nexport default combineReducers({\r\n  charactersReducer,\r\n  episodesReducer,\r\n  charactersInfoReducer,\r\n  episodesInfoReducer,\r\n  charactersErrorReducer,\r\n  episodesErrorReducer\r\n})\r\n","export let charactersAPI = `https://rickandmortyapi.com/api/character/`;\r\n\r\nexport let episodesAPI = `https://rickandmortyapi.com/api/episode/`;\r\n","export const setCharactersList = characters => ({\r\n  type: 'SET_CHARACTERS_LIST',\r\n  characters\r\n})\r\nexport const setEpisodesList = episodes => ({\r\n  type: 'SET_EPISODES_LIST',\r\n  episodes\r\n})\r\nexport const setCharactersInfo = charsInfo => ({\r\n  type: 'SET_CHARACTERS_INFO',\r\n  charsInfo\r\n})\r\nexport const setEpisodesInfo = epsInfo => ({\r\n  type: 'SET_EPISODES_INFO',\r\n  epsInfo\r\n})\r\nexport const setCharactersError = isErrorOccurred => ({\r\n  type: 'SET_CHARACTERS_ERROR',\r\n  isErrorOccurred\r\n})\r\nexport const setEpisodesError = isErrorOccurred => ({\r\n  type: 'SET_EPISODES_ERROR',\r\n  isErrorOccurred\r\n})\r\n","import {\r\n  setCharactersError,\r\n  setCharactersInfo,\r\n  setCharactersList,\r\n  setEpisodesError,\r\n  setEpisodesInfo,\r\n  setEpisodesList\r\n} from \"../actions/actions\";\r\n\r\n\r\nexport default function fetchAPI(type, dispatch, url){\r\n  fetch(url)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (type === 'characters'){\r\n          if (res.error)\r\n            dispatch(setCharactersError(true))\r\n          else {\r\n            dispatch(setCharactersError(false))\r\n            dispatch(setCharactersList(res.results))\r\n            dispatch(setCharactersInfo(res.info))\r\n          }\r\n        } else {\r\n          if (res.error)\r\n            dispatch(setEpisodesError(true))\r\n          else {\r\n            dispatch(setEpisodesError(false))\r\n            dispatch(setEpisodesList(res.results))\r\n            dispatch(setEpisodesInfo(res.info))\r\n          }\r\n        }\r\n      });\r\n}\r\n","export function generateRandomID(length) {\r\n  let result = '',\r\n      chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_';\r\n\r\n  for (let i = 0; i < length; i++)\r\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\r\n\r\n  return result;\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport {useEffect, useState} from \"react\";\r\nimport {generateRandomID} from \"../../helpers/generate.random.id\";\r\nimport {episodesAPI} from \"../../requests/requests\";\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  minWidth: 300,\r\n  maxWidth: 500,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst style1 = {\r\n  maxHeight: 300,\r\n  overflowY: 'auto'\r\n}\r\n\r\nexport default function BasicModal({data, open, onClose}) {\r\n  let [listOfEpisodes, setList] = useState([])\r\n\r\n  useEffect(()=>{\r\n    fetch(episodesAPI + data.episode.map(eps => eps.split('/')[eps.split('/').length-1]).join(','))\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          if (Array.isArray(res))\r\n            setList([...res])\r\n          else\r\n            setList([res])\r\n        })\r\n    return setList([])\r\n  },[data.episode, open])\r\n\r\n  return (\r\n      <div>\r\n        <Modal\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={style}>\r\n            <Typography id=\"modal-modal-title\" variant=\"h3\" component=\"h2\">\r\n              {data.name}\r\n            </Typography>\r\n            <Typography sx={{mb: 1.5}} color=\"text.secondary\">\r\n              Gender: {data.gender}\r\n            </Typography>\r\n            <Typography id=\"modal-modal-description\" sx={{ mt: 2 }} variant=\"body2\">\r\n              Species: {data.species}\r\n              <br/>\r\n              Status: {data.status}\r\n              <br/>\r\n              Location: {data.location.name}\r\n              <br/>\r\n              Type: {data.type || 'None'}\r\n              <br/>\r\n              Origin: {data.origin.name}\r\n              <br/>\r\n              Created: {(new Date(data.created)).toLocaleDateString()}\r\n            </Typography>\r\n            <Box id=\"modal-modal-description\" sx={{ mt: 2, ...style1}} variant=\"body2\">\r\n              Episodes: {listOfEpisodes.length}\r\n              <br/>\r\n              <ul>\r\n              {\r\n                listOfEpisodes.map(eps => <li key={generateRandomID(10)}>[{eps.episode}] {eps.name}</li>)\r\n              }\r\n              </ul>\r\n            </Box>\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n  );\r\n}\r\n","import React, {useState} from \"react\";\r\n\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport {CardMedia} from \"@mui/material\";\r\nimport BasicModal from \"../modal/BasicModal\";\r\n\r\n\r\nexport default function BasicCard({data, type}) {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  if (type === 'characters') {\r\n\r\n    return (\r\n        <Card sx={{m: 1.5, width: 300}}>\r\n          <CardContent>\r\n            <CardMedia\r\n                component=\"img\"\r\n                // height=\"194\"\r\n                image={data.image}\r\n                alt={data.name + ' image'}\r\n            />\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              {data.name}\r\n            </Typography>\r\n            <Typography sx={{mb: 1.5}} color=\"text.secondary\">\r\n              Gender: {data.gender}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Species: {data.species}\r\n              <br/>\r\n              Status: {data.status}\r\n              <br/>\r\n              Location: {data.location.name}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" onClick={handleOpen}>Details</Button>\r\n          </CardActions>\r\n          <BasicModal data={data} open={open} onClose={handleClose}/>\r\n        </Card>\r\n    )\r\n  } else\r\n    return (\r\n        <Card sx={{ m:1.5, width: 300 }}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              {data.name}\r\n            </Typography>\r\n            <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n              {data.episode}\r\n              <br/>\r\n              Air date: {data.air_date}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {FormControl, InputLabel, MenuItem, Select} from \"@mui/material\";\r\nimport {generateRandomID} from \"../../helpers/generate.random.id\";\r\n\r\nexport function Filter({filters, setFilterString, handleChangePage}) {\r\n  const [values, setValues] = React.useState({})\r\n\r\n  function onChange(e){\r\n    setValues({\r\n      ...values,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  function handleOnClear(){\r\n    let emptyVal = values;\r\n    Object.keys(emptyVal).forEach(k => emptyVal[k] = '')\r\n    setValues({...values, ...emptyVal})\r\n\r\n    setFilterString(``)\r\n    handleChangePage(null, 1, ``)\r\n  }\r\n\r\n  function handleOnApply(){\r\n    let str = ``\r\n    for (let key in values)\r\n      str += `&${key}=${values[key]}`\r\n\r\n    setFilterString(str)\r\n    handleChangePage(null, 1, str)\r\n  }\r\n\r\n  return (\r\n      <Box>\r\n        <Box sx={{pt: 3, pl: 3, pr: 3, display: \"flex\", flexDirection: 'row'}}>\r\n        {\r\n          Object.entries(filters).map(([key, val]) => Array.isArray(val) ?\r\n              <FormControl\r\n                  key={generateRandomID(10)}\r\n                  sx={{width: 200, mr: 2}}>\r\n                <InputLabel id=\"demo-simple-select-label\">{key}</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values[key]||''}\r\n                    label={key}\r\n                    onChange={onChange}\r\n                    name={key}\r\n                >\r\n                  {\r\n                    val.map(option => <MenuItem key={option} value={option}>{option}</MenuItem>)\r\n                  }\r\n                </Select>\r\n              </FormControl>\r\n              :\r\n              <TextField id=\"outlined-basic\"\r\n                         sx={{width: 200, mr: 2}}\r\n                         key={key}\r\n                         label={key}\r\n                         variant=\"outlined\"\r\n                         name={key}\r\n                         value={values[key]||''}\r\n                         onChange={onChange}\r\n              />\r\n          )\r\n        }\r\n        </Box>\r\n        <Box sx={{p: 3, display: \"flex\", flexDirection: 'row'}}>\r\n          <Button onClick={handleOnClear} sx={{ mr: 3 }}>Clear</Button>\r\n          <Button onClick={handleOnApply} variant=\"outlined\">Apply filter</Button>\r\n        </Box>\r\n      </Box>\r\n  );\r\n}\r\n","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {charactersAPI, episodesAPI} from \"../../requests/requests\";\r\nimport fetchAPI from \"../../requests/fetcher\";\r\n\r\nimport BasicCard from \"../basicCard/BasicCard\";\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Box from \"@mui/material/Box\";\r\nimport {Filter} from \"../filter/Filter\";\r\n\r\nfunction TabPanel({value, index, dispatch, content, info, error, contentType, filters, API}) {\r\n  useEffect(() => {\r\n    fetchAPI(contentType, dispatch, API)\r\n  }, [contentType, dispatch])\r\n\r\n  const [page, setPage] = React.useState(1);\r\n  const [filterString, setFilterString] = React.useState(``);\r\n\r\n  const handleChangePage = (event, newPage = 1, filter = filterString) => {\r\n    fetchAPI(\r\n        contentType,\r\n        dispatch,\r\n        API + `?page=${newPage}` + filter\r\n    )\r\n    setPage(newPage);\r\n  };\r\n\r\n  if (!Object.keys(content).length || !Object.keys(info).length)\r\n    return null;\r\n\r\n  return (\r\n      <div hidden={value !== index}>\r\n        <Box>\r\n          <Filter filters={filters} setFilterString={setFilterString} handleChangePage={handleChangePage}/>\r\n        </Box>\r\n        <Box sx={{p: 3, display: \"flex\", flexFlow: 'wrap', justifyContent: 'space-around'}}>\r\n          {\r\n            (!error) ?\r\n                content.map(res =>\r\n                    <BasicCard key={res.id} data={res} type={contentType}/>\r\n                ) :\r\n                <Box>There is nothing here</Box>\r\n          }\r\n        </Box>\r\n        <Box sx={{p: 5, pb: 10, display: 'flex', justifyContent: 'end'}}>\r\n          <Pagination page={(!error)? page : 1}\r\n                      count={(!error)? info.pages : 1}\r\n                      onChange={handleChangePage}\r\n                      showFirstButton\r\n                      showLastButton/>\r\n        </Box>\r\n      </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => (\r\n    (ownProps.contentType === 'characters') ?\r\n        {\r\n          content: state.charactersReducer,\r\n          info: state.charactersInfoReducer,\r\n          error: state.charactersErrorReducer,\r\n          API: charactersAPI,\r\n          filters: {\r\n            name: '',\r\n            status: ['alive', 'dead', 'unknown',''],\r\n            species: '',\r\n            type: '',\r\n            gender: ['female', 'male', 'genderless', 'unknown','']\r\n          }\r\n        } :\r\n        {\r\n          content: state.episodesReducer,\r\n          info: state.episodesInfoReducer,\r\n          error: state.episodesErrorReducer,\r\n          API: episodesAPI,\r\n          filters: {\r\n            name: '',\r\n            episode: ''\r\n          }\r\n        }\r\n)\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatch\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(TabPanel)\r\n","import * as React from 'react';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport TabPanel from \"../tabPanel/TabPanel\";\r\n\r\n\r\nexport default function BasicTabs() {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n      <Box sx={{ width: '100%' }}>\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <Tabs sx={{ pt: 3, pl: 3, pr: 3 }} value={value} onChange={handleChange}>\r\n            <Tab label=\"Characters\" />\r\n            <Tab label=\"Episodes\" />\r\n          </Tabs>\r\n        </Box>\r\n        <TabPanel value={value} index={0} contentType={'characters'}/>\r\n        <TabPanel value={value} index={1} contentType={'episodes'}/>\r\n      </Box>\r\n  );\r\n}\r\n","import React from \"react\"\r\n\r\nimport './App.css'\r\nimport BasicTabs from \"./tabs/BasicTabs\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BasicTabs />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport {render} from 'react-dom'\r\nimport {createStore} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport mainReducer from './reducers/main.reducer'\r\nimport './index.css'\r\nimport App from './components/App'\r\n\r\n\r\nconst store = createStore(mainReducer)\r\n\r\nrender(\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}